<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<task:annotation-driven/>
	<jpa:repositories base-package="com.slyak.**.dao"/>
	
	<!-- entityManagerFactory -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
   	    <property name="packagesToScan" value="com.slyak"/>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="false"/>
				<property name="database" value="MYSQL"/>
			</bean>
		</property>
		<property name="persistenceProviderClass" value="org.hibernate.ejb.HibernatePersistence"/>
		<property name="jpaProperties">
	        <props>
	            <prop key="hibernate.default_schema">cms</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.jdbc.fetch_size">50</prop>
                <prop key="hibernate.jdbc.batch_size">25</prop>
                <prop key="use_streams_for_binary">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
                <prop key="hibernate.show_sql">${hibernate.debug}</prop>
                <prop key="hibernate.format_sql">${hibernate.debug}</prop>
                <prop key="hibernate.generate_statistics">${hibernate.debug}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
	        </props>
   	    </property>
	</bean>	
	
	<!-- sql executor -->
	<jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">
		<jdbc:script encoding="UTF-8" location="classpath:*.sql"/>
	</jdbc:initialize-database>
	
	<!-- transactionManager -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice> -->
	
	<!-- messagesource -->
	<bean id="messageSource" class="com.slyak.core.support.PathMatchingReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:messages</value>
				<value>classpath*:com/slyak/cms/**/messages</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="true"/>
	</bean>
	
	<!-- validator -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
		<property name="validationMessageSource" ref="messageSource"/>
	</bean>
	
 	<bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor">
 		<property name="validator" ref="validator"/>
 	</bean>
 	
 	<bean class="org.springframework.validation.beanvalidation.BeanValidationPostProcessor">
 		<property name="validator" ref="validator"/>
 	</bean>
 	
	<!-- aop config -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="false" />
    <aop:config proxy-target-class="false">
    	<aop:pointcut expression="execution(* com.slyak..service.impl.*.*(..))" id="servicePointCut"/>
    	for transaction
		<aop:advisor pointcut-ref="servicePointCut" advice-ref="txAdvice"/>
	</aop:config> -->
	
	<!-- js handler -->
	<bean class="com.slyak.core.js.JavaScriptHandler">
		<property name="jsLibs">
			<list>
				<value>classpath:jslib/env.rhino.1.2.js</value>
				<value>classpath:jslib/jquery.js</value>
			</list>
		</property>
	</bean>
	
	<bean id="layout" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
		<property name="templateLoaderPath" value="${page.layout.location}"/>
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>
	
	<bean id="border" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
		<property name="templateLoaderPath" value="${widget.border.location}"/>
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>
	
	<!-- 文件上传目录 -->
 	<bean class="com.slyak.core.io.StaticResourceMappingManagerImpl">
 		<property name="uploadPath" value="/upload/file"/>
 	</bean>
</beans>
